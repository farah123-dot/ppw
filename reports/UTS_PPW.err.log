Traceback (most recent call last):
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/python/3.12.1/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/python/3.12.1/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd

# Kolom topik
topic_cols = [f"Topik_{i+1}" for i in range(5)]  # pastikan jumlah topik sesuai LDA

# Pastikan tipe kolom float
for col in topic_cols:
    df_final[col] = df_final[col].astype(float)

# Format angka 6 desimal untuk tampilan
df_display = df_final.copy()
for col in topic_cols:
    df_display[col] = df_display[col].map(lambda x: f"{x:.6f}")

# Buat snippet clean_text (misal 0-50 karakter)
df["cleaned_text_snippet"] = df["cleaned_text"].apply(lambda x: x[:50] + "..." if len(x) > 50 else x)

# Gabungkan snippet dengan kategori dan topik (tanpa Topik_Dominan)
df_excel = pd.concat(
    [df[["cleaned_text_snippet", "kategori"]], df_display[topic_cols]],
    axis=1
)

# --- Tampilkan 10 data pertama langsung pakai pandas ---
pd.set_option('display.max_columns', None)  # tampilkan semua kolom
pd.set_option('display.width', 1000)        # lebarkan tampilan agar rapi
print(df_excel.head(10))

# Simpan ke CSV
df_excel.to_csv("hasil_lda_berita.csv", index=False, encoding='utf-8-sig')
print("âœ… File CSV berhasil disimpan: hasil_lda_berita.csv")
------------------


[31m---------------------------------------------------------------------------[39m
[31mNameError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[7][39m[32m, line 8[39m
[32m      6[39m [38;5;66;03m# Pastikan tipe kolom float[39;00m
[32m      7[39m [38;5;28;01mfor[39;00m col [38;5;129;01min[39;00m topic_cols:
[32m----> [39m[32m8[39m     df_final[col] = [43mdf_final[49m[col].astype([38;5;28mfloat[39m)
[32m     10[39m [38;5;66;03m# Format angka 6 desimal untuk tampilan[39;00m
[32m     11[39m df_display = df_final.copy()

[31mNameError[39m: name 'df_final' is not defined

